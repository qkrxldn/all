@startuml Sequence Diagram

skinparam SequenceBoxBorderColor #4682B4
skinparam SequenceBoxBackgroundColor #E6F3FF
skinparam SequenceGroupBackgroundColor #F5FAFF
skinparam SequenceGroupBodyBackgroundColor #FAFBFF
skinparam ParticipantBackgroundColor #AED6F1
skinparam ActorBackgroundColor #D4E6F1

actor "User" as user
participant "UI" as UI
participant "Controller" as Controller
participant "Account" as Account
participant "Booking" as booking
participant "Passenger" as passenger
participant "Flight" as flight
participant "Luggage" as luggage
participant "Payment" as payment

== Passenger Details==

UI -> Controller : POST /passenger_details (booking_ref, seat_ids, person_count, weight data)
activate Controller

Controller -> Controller : find_booking_by_reference

Controller -> booking : add_luggage(Luggage(total_weight))
activate booking
booking -> luggage : new Luggage(total_weight)
activate luggage
luggage -> luggage : calculate_price()
luggage --> booking :
deactivate luggage
booking --> Controller :
deactivate booking

Controller --> UI : Display passenger details form (with hidden values)

== Booking Summary==

UI -> Controller : POST /booking_summary (all passenger details, booking_ref)

Controller -> Controller : find_booking_by_reference(booking_ref)

Controller -> Controller : get_flight_by_id(booking.flight.flight_id)

Controller -> Controller : process_passenger_data(booking, form_data)

Controller -> Controller : assign_seats_to_passengers(booking, form_data)

Controller -> Controller : calculate_passenger_seat_details(booking, flight)

Controller -> booking : Create Payment(total_price)
activate booking
booking --> Controller :
deactivate booking





Controller --> UI : Display

== Payment==

UI -> Controller : POST /payment (booking_ref, total_price)

Controller -> Controller : find_booking_by_reference(booking_ref)

Controller --> UI : Display

== Payment Confirmation==

UI-> Controller : POST /payment_confirmation (booking_ref, payment details)

Controller -> Controller : find_booking_by_reference(booking_ref)

Controller -> booking : update_booking_status()
activate booking
booking --> Controller :
deactivate booking

Controller -> booking : payment.process_payment(card_type, card_number, cvv, exp)
activate booking
booking -> payment : process_payment(card_type, card_number, cvv, exp)
activate payment
payment --> booking :
deactivate payment
booking --> Controller :
deactivate booking

Controller -> Account : add_booking_history(booking)
activate Account
Account -> Controller
deactivate Account

Controller --> UI : Display

@enduml